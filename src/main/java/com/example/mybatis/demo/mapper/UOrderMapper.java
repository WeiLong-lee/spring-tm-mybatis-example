package com.example.mybatis.demo.mapper;

import com.example.mybatis.demo.domain.UOrder;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

@Repository
public interface UOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @Delete({
        "delete from u_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @Insert({
        "insert into u_order (id, user_id, ",
        "name, price, order_list, ",
        "ctime, utime)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, ",
        "#{name,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, #{orderList,jdbcType=VARCHAR}, ",
        "#{ctime,jdbcType=BIGINT}, #{utime,jdbcType=BIGINT})"
    })
    int insert(UOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @InsertProvider(type=UOrderSqlProvider.class, method="insertSelective")
    int insertSelective(UOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @Select({
        "select",
        "id, user_id, name, price, order_list, ctime, utime",
        "from u_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.NUMERIC),
        @Result(column="order_list", property="orderList", jdbcType=JdbcType.VARCHAR),
        @Result(column="ctime", property="ctime", jdbcType=JdbcType.BIGINT),
        @Result(column="utime", property="utime", jdbcType=JdbcType.BIGINT)
    })
    UOrder selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @UpdateProvider(type=UOrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table u_order
     *
     * @mbg.generated Tue Aug 20 18:34:29 CST 2019
     */
    @Update({
        "update u_order",
        "set user_id = #{userId,jdbcType=BIGINT},",
          "name = #{name,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=NUMERIC},",
          "order_list = #{orderList,jdbcType=VARCHAR},",
          "ctime = #{ctime,jdbcType=BIGINT},",
          "utime = #{utime,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UOrder record);


    @Select({"select * from u_order where user_id = #{userId}"})
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.NUMERIC),
        @Result(column="order_list", property="orderList", jdbcType=JdbcType.VARCHAR),
        @Result(column="ctime", property="ctime", jdbcType=JdbcType.BIGINT),
        @Result(column="utime", property="utime", jdbcType=JdbcType.BIGINT)
    })
    List<UOrder> findOrderListByUserId(@Param("userId") Integer userId);
}