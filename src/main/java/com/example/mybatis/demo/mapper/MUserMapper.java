package com.example.mybatis.demo.mapper;

import com.example.mybatis.demo.domain.MUser;
import com.example.mybatis.demo.dto.UserInfo;
import java.util.Map;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Many;
import org.apache.ibatis.annotations.MapKey;
import org.apache.ibatis.annotations.One;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

//@CacheNamespace
@Repository
public interface MUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @Delete({
        "delete from m_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @Insert({
        "insert into m_user (id, name, ",
        "pwd, email, phone, ",
        "address)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{pwd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR})"
    })
//    @SelectKey(statement="call next value for TestSequence", keyProperty="id", before=true, resultType=int.class)
//    @Options(useGeneratedKeys = true,keyProperty = "id")
    int insert(MUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @InsertProvider(type=MUserSqlProvider.class, method="insertSelective")
    int insertSelective(MUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @Select({
        "select",
        "id, name, pwd, email, phone, address",
        "from m_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="pwd", property="pwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    MUser selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @UpdateProvider(type=MUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Tue Aug 20 12:22:31 CST 2019
     */
    @Update({
        "update m_user",
        "set name = #{name,jdbcType=VARCHAR},",
          "pwd = #{pwd,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MUser record);



//    for example insert/delete/update/select


    @Select({"select * from m_user where id = #{id,jdbcType=INTEGER} "})
//    @Select({"select id,name,pwd ","from m_user","where id = #{id,jdbcType=INTEGER}"})
    @Results(value = {
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="pwd", property="pwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    MUser selectUserById(@Param("id") Integer id);


    @Insert({
        "insert into m_user ( name, ",
        "pwd, email, phone, ",
        "address)",
        "values (#{name,jdbcType=VARCHAR}, ",
        "#{pwd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR})"
    })
            //pgSQl
    @SelectKey(keyProperty = "id",statement = "SELECT currval('m_user_id_seq')",before = false,resultType = int.class)
    int insertUser(MUser record);

    @Select({"select * from m_user where name = #{name,jdbcType=VARCHAR}"})
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="pwd", property="pwd", jdbcType=JdbcType.VARCHAR),
    })
//    @ConstructorArgs({
//        @Arg(column = "id",javaType = Integer.class,id = true),
//        @Arg(column = "name",javaType = String.class),
//        @Arg(column = "pwd",javaType = String.class)
//    })
    @MapKey(value = "id")
    Map selectUserMapByName(@Param("name") String name);


    // @Many @One

    @Select({"select * from m_user where id=#{userId} "})
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="pwd", property="pwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
//        1ï¼š1
        @Result(column="id", property="account",one = @One(select = "com.example.mybatis.demo.mapper.AccountMapper.findAccountByUserId")),
//        1:N
        @Result(column="id", property="orderList", many = @Many(select = "com.example.mybatis.demo.mapper.UOrderMapper.findOrderListByUserId")),
    })
    UserInfo selectUserInfo(@Param("userId") Integer userId);


}